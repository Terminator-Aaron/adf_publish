{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "AZUSMDA301V"
        },
        "SqlServer1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'SqlServer1'"
        },
        "SqlServer1_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'SqlServer1'"
        },
        "SIT_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'SIT'"
        },
        "AzureBlobStorageSIT_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureBlobStorageSIT'"
        },
        "Common Server_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'Common Server'"
        },
        "CommonServer_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'CommonServer'"
        },
        "CosmosDb1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
        },
        "AzureBlobStorageBackUp_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureBlobStorageBackUp'"
        },
        "Phase2A_SQL_Server_SIT_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'Phase2A_SQL_Server_SIT'"
        },
        "Phase2A_AzureBlobStorage_SIT_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'Phase2A_AzureBlobStorage_SIT'"
        },
        "Phase2B_SQL_Server_SIT_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'Phase2B_SQL_Server_SIT'"
        },
        "DEV_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'DEV'"
        },
        "SharedIntegrationRuntime_properties_typeProperties_linkedInfo_resourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/1e984346-edba-4a2c-8888-cf0f668bea68/resourcegroups/EDP_Testing/providers/Microsoft.DataFactory/factories/AZUEDPA204V/integrationruntimes/AZUEDPA201V"
        },
        "SqlServer1_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "MTRCORP\\Smdtdbu"
        },
        "AzureKeyVault_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://azusmda202v.vault.azure.net/"
        },
        "Common Server_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "\\\\Twdsmda201v\\smdm"
        },
        "Common Server_properties_typeProperties_userId": {
            "type": "string",
            "defaultValue": "mtrcorp\\smdtintf"
        },
        "CommonServer_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "\\\\Twdsmda201v\\smdm"
        },
        "CommonServer_properties_typeProperties_userId": {
            "type": "string",
            "defaultValue": "mtrcorp\\smdtintf"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttunityAxleNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "2019-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttunityAxleNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "2029-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttunityCarNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "2019-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttunityCarNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "2029-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttunityEquipmentNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "2019-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttunityEquipmentNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "2029-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttuntiyBogieNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "2019-09-09"
        },
        "Trigger_AttunityMaterData_properties_CopyPipeline_AttuntiyBogieNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "2029-09-09"
        },
        "Trigger_y3d_properties_CopyPipeline_AttunityIMTE_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
        },
        "Trigger_y3d_properties_CopyPipeline_AttunityIMTE_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_esd_properties_CopyPipeline_CompleteWO_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addminutes(trigger().scheduledTime, -5)}"
        },
        "Trigger_esd_properties_CopyPipeline_CompleteWO_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_AzureBlobStorageBackUp_properties_CopyPipeline_BackUpAzureStorage_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
        },
        "Trigger_AzureBlobStorageBackUp_properties_CopyPipeline_BackUpAzureStorage_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_j61_properties_CopyPipeline_WorkGroup_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
        },
        "Trigger_j61_properties_CopyPipeline_WorkGroup_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_h3m_properties_Phase2A_CopyPipeline_Workgroup_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_h3m_properties_Phase2A_CopyPipeline_Workgroup_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_mwk_properties_Phase2A_AttunityAxleNo_CopyPipeline_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
        },
        "Trigger_mwk_properties_Phase2A_AttunityAxleNo_CopyPipeline_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_so7_properties_Phase2A_CopyPipeline_AttunityCarNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
        },
        "Trigger_so7_properties_Phase2A_CopyPipeline_AttunityCarNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_hzv_properties_Phase2A_CopyPipeline_AttunityEquipmentNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_hzv_properties_Phase2A_CopyPipeline_AttunityEquipmentNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_j47_properties_Phase2A_CopyPipeline_AttunityIMTE_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_j47_properties_Phase2A_CopyPipeline_AttunityIMTE_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_j1t_properties_Phase2A_CopyPipeline_AttuntiyBogieNo_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_j1t_properties_Phase2A_CopyPipeline_AttuntiyBogieNo_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_a3e_properties_Phase2A_CopyPipeline_CompleteWO_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addminutes(trigger().scheduledTime, -5)}"
        },
        "Trigger_a3e_properties_Phase2A_CopyPipeline_CompleteWO_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_brc_properties_Phase2A_CopyPipeline_FitDefitMent_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addminutes(trigger().scheduledTime, -3)}"
        },
        "Trigger_brc_properties_Phase2A_CopyPipeline_FitDefitMent_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_efy_properties_CopyPipeline_AttnuityFailureCode_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_efy_properties_CopyPipeline_AttnuityFailureCode_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_syncCmrequest_properties_CopyPipeline_SyncCmRequest_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addminutes(trigger().scheduledTime, -3)}"
        },
        "Trigger_syncCmrequest_properties_CopyPipeline_SyncCmRequest_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_cmTemplate_properties_CopyPipeline_CmTemplate_BlobToCommonServer_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addminutes(trigger().scheduledTime, -3)}"
        },
        "Trigger_cmTemplate_properties_CopyPipeline_CmTemplate_BlobToCommonServer_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_cqaupload_properties_pipeline_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@trigger().outputs.windowStartTime"
        },
        "Trigger_cqaupload_properties_pipeline_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().outputs.windowEndTime"
        },
        "Trigger_AttunityFailCodeWithEquipNo_properties_pipeline_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@trigger().outputs.windowStartTime"
        },
        "Trigger_AttunityFailCodeWithEquipNo_properties_pipeline_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().outputs.windowEndTime"
        },
        "Trigger_Attunity_EquipmentClassAssocCode_properties_CopyPipeline_Attunity_EquipmentClassAssocCode_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_Attunity_EquipmentClassAssocCode_properties_CopyPipeline_Attunity_EquipmentClassAssocCode_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_tv9_properties_CopyPipeline_AttunitySYSGENERICCODE_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_tv9_properties_CopyPipeline_AttunitySYSGENERICCODE_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_Attunity_SYS_GENERIC_CODE_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_Attunity_SYS_GENERIC_CODE_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_Attunity_StandardJob_properties_CopyPipeline_Attunity_StandardJob_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_Attunity_StandardJob_properties_CopyPipeline_Attunity_StandardJob_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_Attunity_CM_InitialDelaySetting_properties_CopyPipeline_Attunity_CM_InitialDelaySetting_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_Attunity_CM_InitialDelaySetting_properties_CopyPipeline_Attunity_CM_InitialDelaySetting_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_Attunity_StandardJob_New_properties_CopyPipeline_Attunity_StandardJob_New_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_Attunity_StandardJob_New_properties_CopyPipeline_Attunity_StandardJob_New_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        },
        "Trigger_Attunity_SYS_GENERIC_CODE_New_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_New_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@{addhours(trigger().scheduledTime, -12)}"
        },
        "Trigger_Attunity_SYS_GENERIC_CODE_New_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_New_parameters_windowEnd": {
            "type": "string",
            "defaultValue": "@trigger().scheduledTime"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/SharedIntegrationRuntime')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {
                    "linkedInfo": {
                        "resourceId": "[parameters('SharedIntegrationRuntime_properties_typeProperties_linkedInfo_resourceId')]",
                        "authorizationType": "Rbac"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/integrationRuntime-Server')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServer1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('SqlServer1_connectionString')]",
                    "userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('SqlServer1_password')]"
                    }
                },
                "connectVia": {
                    "referenceName": "SharedIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/SharedIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SIT')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('SIT_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "SharedIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/SharedIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobStorageSIT')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('AzureBlobStorageSIT_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "SharedIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/SharedIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Common Server')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "FileServer",
                "typeProperties": {
                    "host": "[parameters('Common Server_properties_typeProperties_host')]",
                    "userId": "[parameters('Common Server_properties_typeProperties_userId')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('Common Server_password')]"
                    }
                },
                "connectVia": {
                    "referenceName": "SharedIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/SharedIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CommonServer')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "FileServer",
                "typeProperties": {
                    "host": "[parameters('CommonServer_properties_typeProperties_host')]",
                    "userId": "[parameters('CommonServer_properties_typeProperties_userId')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('CommonServer_password')]"
                    }
                },
                "connectVia": {
                    "referenceName": "SharedIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/SharedIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "CosmosDb",
                "typeProperties": {
                    "connectionString": "[parameters('CosmosDb1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobStorageBackUp')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('AzureBlobStorageBackUp_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_SQL_Server_SIT')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('Phase2A_SQL_Server_SIT_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_AzureBlobStorage_SIT')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('Phase2A_AzureBlobStorage_SIT_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2B_SQL_Server_SIT')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('Phase2B_SQL_Server_SIT_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEV')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('DEV_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "SharedIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/SharedIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_AttunityMaterData')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttunityAxleNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttunityAxleNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttunityAxleNo_parameters_windowEnd')]"
                        }
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttunityCarNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttunityCarNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttunityCarNo_parameters_windowEnd')]"
                        }
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttunityEquipmentNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttunityEquipmentNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttunityEquipmentNo_parameters_windowEnd')]"
                        }
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttuntiyBogieNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttuntiyBogieNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_AttunityMaterData_properties_CopyPipeline_AttuntiyBogieNo_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2019-09-09T12:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttunityAxleNo')]",
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttunityCarNo')]",
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttunityEquipmentNo')]",
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttuntiyBogieNo')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_y3d')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttunityIMTE",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_y3d_properties_CopyPipeline_AttunityIMTE_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_y3d_properties_CopyPipeline_AttunityIMTE_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2019-09-27T12:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttunityIMTE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_esd')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_CompleteWO",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_esd_properties_CopyPipeline_CompleteWO_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_esd_properties_CopyPipeline_CompleteWO_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 5,
                        "startTime": "2019-09-27T12:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_CompleteWO')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_AzureBlobStorageBackUp')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_BackUpAzureStorage",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_AzureBlobStorageBackUp_properties_CopyPipeline_BackUpAzureStorage_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_AzureBlobStorageBackUp_properties_CopyPipeline_BackUpAzureStorage_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2019-11-21T01:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_BackUpAzureStorage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_5u7')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_CosmosDBBackUp",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2019-11-21T02:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_CosmosDBBackUp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_j61')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_WorkGroup",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_j61_properties_CopyPipeline_WorkGroup_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_j61_properties_CopyPipeline_WorkGroup_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2019-12-12T08:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_WorkGroup')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_h3m')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_Workgroup",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_h3m_properties_Phase2A_CopyPipeline_Workgroup_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_h3m_properties_Phase2A_CopyPipeline_Workgroup_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2020-01-09T00:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_Workgroup')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_mwk')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_AttunityAxleNo_CopyPipeline",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_mwk_properties_Phase2A_AttunityAxleNo_CopyPipeline_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_mwk_properties_Phase2A_AttunityAxleNo_CopyPipeline_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2020-01-11T20:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_AttunityAxleNo_CopyPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_so7')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_AttunityCarNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_so7_properties_Phase2A_CopyPipeline_AttunityCarNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_so7_properties_Phase2A_CopyPipeline_AttunityCarNo_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2020-01-11T20:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_AttunityCarNo')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_hzv')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_AttunityEquipmentNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_hzv_properties_Phase2A_CopyPipeline_AttunityEquipmentNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_hzv_properties_Phase2A_CopyPipeline_AttunityEquipmentNo_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2020-01-11T20:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_AttunityEquipmentNo')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_j47')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_AttunityIMTE",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_j47_properties_Phase2A_CopyPipeline_AttunityIMTE_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_j47_properties_Phase2A_CopyPipeline_AttunityIMTE_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2020-01-11T20:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_AttunityIMTE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_j1t')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_AttuntiyBogieNo",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_j1t_properties_Phase2A_CopyPipeline_AttuntiyBogieNo_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_j1t_properties_Phase2A_CopyPipeline_AttuntiyBogieNo_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2020-01-11T20:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_AttuntiyBogieNo')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_a3e')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_CompleteWO",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_a3e_properties_Phase2A_CopyPipeline_CompleteWO_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_a3e_properties_Phase2A_CopyPipeline_CompleteWO_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 5,
                        "startTime": "2020-01-13T09:17:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_CompleteWO')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_brc')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Phase2A_CopyPipeline_FitDefitMent",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_brc_properties_Phase2A_CopyPipeline_FitDefitMent_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_brc_properties_Phase2A_CopyPipeline_FitDefitMent_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 3,
                        "startTime": "2020-01-14T02:53:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Phase2A_CopyPipeline_FitDefitMent')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_efy')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttnuityFailureCode",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_efy_properties_CopyPipeline_AttnuityFailureCode_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_efy_properties_CopyPipeline_AttnuityFailureCode_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2020-03-16T20:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttnuityFailureCode')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_syncCmrequest')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_SyncCmRequest",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_syncCmrequest_properties_CopyPipeline_SyncCmRequest_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_syncCmrequest_properties_CopyPipeline_SyncCmRequest_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 3,
                        "startTime": "2020-04-08T07:03:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_SyncCmRequest')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_cmTemplate')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_CmTemplate_BlobToCommonServer",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_cmTemplate_properties_CopyPipeline_CmTemplate_BlobToCommonServer_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_cmTemplate_properties_CopyPipeline_CmTemplate_BlobToCommonServer_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 3,
                        "startTime": "2020-04-09T08:17:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_CmTemplate_BlobToCommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_cqaupload')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "CopyPipeline_smd_cqa_upload",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "windowStart": {
                            "type": "Expression",
                            "value": "[parameters('Trigger_cqaupload_properties_pipeline_parameters_windowStart')]"
                        },
                        "windowEnd": {
                            "type": "Expression",
                            "value": "[parameters('Trigger_cqaupload_properties_pipeline_parameters_windowEnd')]"
                        }
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 3,
                    "startTime": "2020-04-10T06:17:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_smd_cqa_upload')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_AttunityFailCodeWithEquipNo')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "CopyPipeline_AttunityFailCodeWithEquipNo",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "windowStart": "[parameters('Trigger_AttunityFailCodeWithEquipNo_properties_pipeline_parameters_windowStart')]",
                        "windowEnd": "[parameters('Trigger_AttunityFailCodeWithEquipNo_properties_pipeline_parameters_windowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 1,
                    "startTime": "2020-04-15T05:40:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttunityFailCodeWithEquipNo')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_xal')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2020-06-22T02:43:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_8n8')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 2,
                        "startTime": "2020-06-22T03:11:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_7ar')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-01-28T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_AttunityEquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-01-28T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_jgu')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-01-29T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_EquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_EquipmentClassAssocCode",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_Attunity_EquipmentClassAssocCode_properties_CopyPipeline_Attunity_EquipmentClassAssocCode_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_Attunity_EquipmentClassAssocCode_properties_CopyPipeline_Attunity_EquipmentClassAssocCode_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-02-01T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_EquipmentClassAssocCode')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_tv9')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_AttunitySYSGENERICCODE",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_tv9_properties_CopyPipeline_AttunitySYSGENERICCODE_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_tv9_properties_CopyPipeline_AttunitySYSGENERICCODE_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-03-10T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_AttunitySYSGENERICCODE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_SYS_GENERIC_CODE')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_SYS_GENERIC_CODE",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_Attunity_SYS_GENERIC_CODE_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_Attunity_SYS_GENERIC_CODE_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-03-10T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_SYS_GENERIC_CODE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_StandardJob')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_StandardJob",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_Attunity_StandardJob_properties_CopyPipeline_Attunity_StandardJob_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_Attunity_StandardJob_properties_CopyPipeline_Attunity_StandardJob_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-03-15T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_StandardJob')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_CM_InitialDelaySetting')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_CM_InitialDelaySetting",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_Attunity_CM_InitialDelaySetting_properties_CopyPipeline_Attunity_CM_InitialDelaySetting_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_Attunity_CM_InitialDelaySetting_properties_CopyPipeline_Attunity_CM_InitialDelaySetting_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-04-28T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_CM_InitialDelaySetting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_StandardJob_New')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_StandardJob_New",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_Attunity_StandardJob_New_properties_CopyPipeline_Attunity_StandardJob_New_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_Attunity_StandardJob_New_properties_CopyPipeline_Attunity_StandardJob_New_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-03-15T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_StandardJob_New')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_SYS_GENERIC_CODE_New')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_SYS_GENERIC_CODE_New",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('Trigger_Attunity_SYS_GENERIC_CODE_New_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_New_parameters_windowStart')]",
                            "windowEnd": "[parameters('Trigger_Attunity_SYS_GENERIC_CODE_New_properties_CopyPipeline_Attunity_SYS_GENERIC_CODE_New_parameters_windowEnd')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-03-10T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_SYS_GENERIC_CODE_New')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_Attunity_EquipmentClass')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CopyPipeline_Attunity_EquipmentClass",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 12,
                        "startTime": "2021-03-15T23:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CopyPipeline_Attunity_EquipmentClass')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_2pp')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "BogieNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_2pp')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "BogieNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Bogie"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_ab8')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "AxleNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_ab8')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "AxleNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Axle"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_qtp')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "CarNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_qtp')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "CarNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Cart"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_hou')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "EquipmentNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Equipment"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_hou')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EquipmentNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_y3d')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EQUIP_NO",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_DESP",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_CLASS_DESP",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_ID",
                        "type": "bigint",
                        "precision": 19,
                        "scale": 255
                    },
                    {
                        "name": "PLAN_START_DATE",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 7
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_y3d')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "EQUIP_NO",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_DESP",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_ID",
                        "type": "bigint",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "PLAN_START_DATE",
                        "type": "datetime2",
                        "precision": 27,
                        "scale": 7
                    },
                    {
                        "name": "EQUIP_DESP",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_IMTE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_AzureBS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageSIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-workorderfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageSIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_esd')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CommonServer",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "CompleteWO/New"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_mi3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CosmosDb1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "CosmosDbSqlApiCollection",
                "schema": {},
                "typeProperties": {
                    "collectionName": "FormJsonData"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_mi3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageSIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "temp"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageSIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_DestinationBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageBackUp",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "root"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageBackUp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_OriginBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageSIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "root"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageSIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_5u7')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CosmosDb1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "CosmosDbSqlApiCollection",
                "schema": {},
                "typeProperties": {
                    "collectionName": "FormJsonData"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_5u7')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageBackUp",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "cosmosdbbakup"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageBackUp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_j61')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "WorkGroupNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkGroupCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_WorkGroup"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_j61')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "WK_GRP_ID",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_h3m')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "WorkGroupNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkGroupCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_WorkGroup"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_h3m')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "WK_GRP_ID",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_mwk')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "AxleNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_mwk')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "AxleNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Axle"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_so7')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "CarNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Cart"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_so7')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "CarNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_hzv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "EquipmentNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Equipment"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_hzv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EquipmentNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_j47')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "EQUIP_NO",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_DESP",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_ID",
                        "type": "bigint",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "PLAN_START_DATE",
                        "type": "datetime2",
                        "precision": 27,
                        "scale": 7
                    },
                    {
                        "name": "EQUIP_DESP",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_IMTE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_j47')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EQUIP_NO",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_DESP",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_CLASS_DESP",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_ID",
                        "type": "bigint",
                        "precision": 19,
                        "scale": 255
                    },
                    {
                        "name": "PLAN_START_DATE",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 7
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_j1t')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "BogieNo",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_j1t')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "BogieNo",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_Bogie"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_a3e')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-workorderfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_a3e')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Common Server",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "CompleteWO/New"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Common Server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_brc')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-fitdefitmentfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_brc')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Common Server",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "UpdateFitmentDefitment/New"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Common Server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_efy')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "FAILURE_CODE",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "FAILURE_CODE_TYPE",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_efy')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "FAILURE_CODE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "FAILURE_CODE_TYPE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_FailueCode"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_syncCmrequest')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-cmsyncworkorderfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_syncCmrequest')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Common Server",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "CreateCMWO/To_ADF"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Common Server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_cmTemplate_Blob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-cmuploadworkorderfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_cmTemplate_CommonServer')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CommonServer",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "CreateCMWO/New"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_cqaupload')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-interface-smd-cqa"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_cqaupload')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CommonServer",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "InterfaceServerBatchJob/CAQUpload/Upload"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_AttunityFailCodeWithEquipNo')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "FAILURE_CODE",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "FAILURE_CODE_TYPE",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_NO",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_AttunityFailCodeWithEquipNo')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "FAILURE_CODE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "FAILURE_CODE_TYPE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_NO",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_FailueCodeWithEquipNo"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_async_workorder')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "WO_NO",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WO_DESP",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_ID",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_NAME",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PLAN_START_DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "GC_WORK_NATURE_LV1_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "GC_WORK_NATURE_LV2_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "STD_JOB_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_NO",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "LOC_ID",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "LOC_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_WorkOrder_ForTest"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_async_workorder')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "WO_NO",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WO_DESP",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_ID",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "WK_GRP_NAME",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PLAN_START_DATE",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 7
                    },
                    {
                        "name": "GC_WORK_NATURE_LV1_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "GC_WORK_NATURE_LV2_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "STD_JOB_CD",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_NO",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "LOC_ID",
                        "type": "bigint",
                        "precision": 19,
                        "scale": 255
                    },
                    {
                        "name": "LOC_CD",
                        "type": "varchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_xal')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-cmuploadworkorderfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_xal')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CommonServer",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "CreateCMWO/New"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttuntiyBogieNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_2pp",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Bogie"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT(EQUIP_NO) AS BogieNo FROM \n\nEI_EQUIPMENT E1 \n\nLEFT JOIN EI_EQUIP_CLASS E2 on E2.EQUIP_CLASS_ID = E1.EQUIP_CLASS_ID\n\nWHERE EQUIP_CLASS_CD LIKE '%BOGIE%'\n\nAND EQUIP_CLASS_CD LIKE 'EMUYS-%' \n\nORDER BY EQUIP_NO\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Bogie"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "BogieNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BogieNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_2pp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_2pp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT(EQUIP_NO) AS BogieNo FROM \n\nEI_EQUIPMENT E1 \n\nLEFT JOIN EI_EQUIP_CLASS E2 on E2.EQUIP_CLASS_ID = E1.EQUIP_CLASS_ID\n\nWHERE EQUIP_CLASS_CD LIKE '%BOGIE%'\n\nAND EQUIP_CLASS_CD LIKE 'EMUYS-%' \n\nORDER BY EQUIP_NO\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_2pp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-05-04T06:20:43Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_2pp')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_2pp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunityAxleNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_ab8",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Axle"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT(EQUIP_NO) AS AxleNo FROM \n\nEI_EQUIPMENT E1 \n\nLEFT JOIN EI_EQUIP_CLASS E2 on E2.EQUIP_CLASS_ID = E1.EQUIP_CLASS_ID\n\nWHERE EQUIP_CLASS_CD LIKE '%AXLE%'\n\nAND EQUIP_CLASS_CD LIKE 'EMUYS-%' \n\nORDER BY EQUIP_NO\n\n\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Axle"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "AxleNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AxleNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_ab8",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_ab8",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT(EQUIP_NO) AS AxleNo FROM \n\nEI_EQUIPMENT E1 \n\nLEFT JOIN EI_EQUIP_CLASS E2 on E2.EQUIP_CLASS_ID = E1.EQUIP_CLASS_ID\n\nWHERE EQUIP_CLASS_CD LIKE '%AXLE%'\n\nAND EQUIP_CLASS_CD LIKE 'EMUYS-%' \n\nORDER BY EQUIP_NO\n\n\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_ab8",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-04-29T10:13:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_ab8')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_ab8')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunityCarNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_qtp",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Cart"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT EQUIP_CLASS_CD AS CarNo FROM xls_v_Equipment_Registration WHERE EQUIP_CLASS_CD LIKE 'EMUY-SS%' ORDER BY EQUIP_NO;",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Cart"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "CarNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CarNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_qtp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_qtp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT EQUIP_CLASS_CD AS CarNo FROM xls_v_Equipment_Registration WHERE EQUIP_CLASS_CD LIKE 'EMUY-SS%' ORDER BY EQUIP_NO;",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_qtp",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-08-31T06:14:41Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_qtp')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_qtp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunityEquipmentNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_hou",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Equipment"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT EQUIP_CLASS_CD AS EquipmentNo FROM xls_v_Equipment_Registration WHERE EQUIP_CLASS_CD LIKE 'EMUYS-%' ORDER BY EQUIP_NO;",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Equipment"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EquipmentNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EquipmentNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_hou",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_hou",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT EQUIP_CLASS_CD AS EquipmentNo FROM xls_v_Equipment_Registration WHERE EQUIP_CLASS_CD LIKE 'EMUYS-%' ORDER BY EQUIP_NO;",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_hou",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-08-31T06:16:30Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_hou')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_hou')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunityIMTE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_y3d",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_IMTE"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "WITH CTE1 AS (\n  SELECT\n    V.EQUIP_NO,\n    V.EQUIP_CLASS_CD,\n    V.EQUIP_DESP, \n    V.EQUIP_CLASS_DESP, \n    E.EQUIP_ID\n  FROM\n    xls_v_Equipment_Registration V\n    inner join EI_EQUIPMENT E on E.EQUIP_NO = V.EQUIP_NO\n  WHERE\n    (\n      (\n        V.EQUIP_CLASS_CD LIKE 'MST%'\n        AND V.EQUIP_NO LIKE 'EI%'\n      )\n      OR (\n        V.EQUIP_CLASS_CD LIKE 'MSI%'\n        AND (\n          V.EQUIP_NO LIKE 'WIX%'\n          OR V.EQUIP_NO LIKE 'WIY%'\n        )\n      )\n    )\n), CTE2 AS (\n  SELECT \n    MIN(W.PLAN_START_DATE) AS PLAN_START_DATE, \n    W.EQUIP_ID\n  FROM\n    WM_WORK_ORDER W \n    left join SA_WORK_GRP S on S.WK_GRP_ID = W.WK_GRP_ID\n    inner join CTE1 C1 on C1.EQUIP_ID = W.EQUIP_ID\n  WHERE\n    W.CREATE_DATE >= DATEADD(MONTH, -12, GETDATE())\n    and S.WK_GRP_ID in (\n      SELECT\n        WK_GRP_ID \n      FROM \n        SA_WORK_GRP \n      WHERE \n        WK_GRP_CD like 'MR%'\n    )\n    and W.STATUS = 'OP'\n    --and W.PLAN_START_DATE >= GETDATE()\n  GROUP BY\n    W.EQUIP_ID\n)\nSELECT\n  C1.*, \n  C2.PLAN_START_DATE\nFROM\n  CTE1 C1 \n  left join CTE2 C2 on C2.EQUIP_ID = C1.EQUIP_ID\nWHERE\nC1.EQUIP_NO is not null\nORDER BY\n  C1.EQUIP_NO",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table [dbo].[Attunity_IMTE]"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_DESP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_DESP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_ID",
                                            "type": "Int64"
                                        },
                                        "sink": {
                                            "name": "EQUIP_ID",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PLAN_START_DATE",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "PLAN_START_DATE",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_DESP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_DESP",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_y3d",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_y3d",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "WITH CTE1 AS (\n  SELECT\n    V.EQUIP_NO,\n    V.EQUIP_CLASS_CD,\n    V.EQUIP_DESP, \n    V.EQUIP_CLASS_DESP, \n    E.EQUIP_ID\n  FROM\n    xls_v_Equipment_Registration V\n    inner join EI_EQUIPMENT E on E.EQUIP_NO = V.EQUIP_NO\n  WHERE\n    (\n      (\n        V.EQUIP_CLASS_CD LIKE 'MST%'\n        AND V.EQUIP_NO LIKE 'EI%'\n      )\n      OR (\n        V.EQUIP_CLASS_CD LIKE 'MSI%'\n        AND (\n          V.EQUIP_NO LIKE 'WIX%'\n          OR V.EQUIP_NO LIKE 'WIY%'\n        )\n      )\n    )\n), CTE2 AS (\n  SELECT \n    MIN(W.PLAN_START_DATE) AS PLAN_START_DATE, \n    W.EQUIP_ID\n  FROM\n    WM_WORK_ORDER W \n    left join SA_WORK_GRP S on S.WK_GRP_ID = W.WK_GRP_ID\n    inner join CTE1 C1 on C1.EQUIP_ID = W.EQUIP_ID\n  WHERE\n    W.CREATE_DATE >= DATEADD(MONTH, -12, GETDATE())\n    and S.WK_GRP_ID in (\n      SELECT\n        WK_GRP_ID \n      FROM \n        SA_WORK_GRP \n      WHERE \n        WK_GRP_CD like 'MR%'\n    )\n    and W.STATUS = 'OP'\n    --and W.PLAN_START_DATE >= GETDATE()\n  GROUP BY\n    W.EQUIP_ID\n)\nSELECT\n  C1.*, \n  C2.PLAN_START_DATE\nFROM\n  CTE1 C1 \n  left join CTE2 C2 on C2.EQUIP_ID = C1.EQUIP_ID\nWHERE\nC1.EQUIP_NO is not null\nORDER BY\n  C1.EQUIP_NO",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_y3d",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-08-31T06:18:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_y3d')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_y3d')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_CompleteWO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_esd",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-workorderfile//"
                            },
                            {
                                "name": "Destination",
                                "value": "CompleteWO/New/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings",
                                    "copyBehavior": "PreserveHierarchy"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_AzureBS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_esd",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2019-09-28T02:17:48Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_AzureBS')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_esd')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_mi3')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_mi3",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "FormJsonData"
                            },
                            {
                                "name": "Destination",
                                "value": "temp//"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "CosmosDbSqlApiSource",
                                "preferredRegions": []
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "setOfObjects"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_mi3",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_mi3",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "annotations": [],
                "lastPublishTime": "2019-11-14T06:41:32Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_mi3')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_mi3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_BackUpAzureStorage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_bq6",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "root//"
                            },
                            {
                                "name": "Destination",
                                "value": "root//"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_OriginBlob",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_DestinationBlob",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2019-11-21T01:51:10Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_OriginBlob')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_DestinationBlob')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_CosmosDBBackUp')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_5u7",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "FormJsonData"
                            },
                            {
                                "name": "Destination",
                                "value": "cosmosdbbakup//"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "CosmosDbSqlApiSource",
                                "preferredRegions": []
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "setOfObjects"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_5u7",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_5u7",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "annotations": [],
                "lastPublishTime": "2019-11-21T01:57:04Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_5u7')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_5u7')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_WorkGroup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_j61",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_WorkGroup"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select WK_GRP_ID, WK_GRP_CD from SA_WORK_GRP Where WK_GRP_CD like 'MR%' \n or WK_GRP_CD like  'CR%'  or WK_GRP_CD like  'MO%'   order by WK_GRP_CD desc",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_WorkGroup"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "WK_GRP_ID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WorkGroupNo",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WorkGroupCode",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_j61",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_j61",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-12-01T09:30:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_j61')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_j61')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_Workgroup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_h3m",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_WorkGroup"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select WK_GRP_ID, WK_GRP_CD from SA_WORK_GRP Where WK_GRP_CD like 'MR%' \n or  WK_GRP_CD like 'CR%' order by WK_GRP_CD  desc",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_WorkGroup"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "WK_GRP_ID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WorkGroupNo",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WorkGroupCode",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_h3m",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_h3m",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-09T07:32:39Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_h3m')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_h3m')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_AttunityAxleNo_CopyPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_mwk",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Axle"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT(E3.EQUIP_NO) AS AxleNo FROM EI_EQUIP_STRT E1,EI_EQUIPMENT E2,EI_EQUIPMENT E3,EI_EQUIP_CLASS E4 WHERE E1.PARENT_EQUIP_ID = E2.EQUIP_ID AND E1.EQUIP_ID = E3.EQUIP_ID AND E4.EQUIP_CLASS_ID = E3.EQUIP_CLASS_ID AND E4.EQUIP_CLASS_CD LIKE 'EMUYS-%' AND E4.EQUIP_CLASS_CD LIKE '%AXLE%'",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Axle"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "AxleNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AxleNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_mwk",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_mwk",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-11T04:20:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_mwk')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_mwk')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_AttunityCarNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_so7",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Cart"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT EQUIP_CLASS_CD AS CarNo FROM xls_v_Equipment_Registration WHERE EQUIP_CLASS_CD LIKE 'EMUY-SS%' ORDER BY EQUIP_NO;",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Cart"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "CarNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CarNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_so7",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_so7",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-11T04:22:57Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_so7')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_so7')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_AttunityEquipmentNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_hzv",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Equipment"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT EQUIP_CLASS_CD AS EquipmentNo FROM xls_v_Equipment_Registration WHERE EQUIP_CLASS_CD LIKE 'EMUYS-%' ORDER BY EQUIP_NO;",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Equipment"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EquipmentNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EquipmentNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_hzv",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_hzv",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-11T04:26:47Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_hzv')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_hzv')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_AttunityIMTE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_j47",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_IMTE"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "WITH CTE1 AS (\n  SELECT\n    V.EQUIP_NO,\n    V.EQUIP_CLASS_CD,\n    V.EQUIP_DESP, \n    V.EQUIP_CLASS_DESP, \n    E.EQUIP_ID\n  FROM\n    xls_v_Equipment_Registration V\n    inner join EI_EQUIPMENT E on E.EQUIP_NO = V.EQUIP_NO\n  WHERE\n    (\n      (\n        V.EQUIP_CLASS_CD LIKE 'MST%'\n        AND V.EQUIP_NO LIKE 'EI%'\n      )\n      OR (\n        V.EQUIP_CLASS_CD LIKE 'MSI%'\n        AND (\n          V.EQUIP_NO LIKE 'WIX%'\n          OR V.EQUIP_NO LIKE 'WIY%'\n        )\n      )\n    )\n), CTE2 AS (\n  SELECT \n    MIN(W.PLAN_START_DATE) AS PLAN_START_DATE, \n    W.EQUIP_ID\n  FROM\n    WM_WORK_ORDER W \n    left join SA_WORK_GRP S on S.WK_GRP_ID = W.WK_GRP_ID\n    inner join CTE1 C1 on C1.EQUIP_ID = W.EQUIP_ID\n  WHERE\n    W.CREATE_DATE >= DATEADD(MONTH, -12, GETDATE())\n    and S.WK_GRP_ID in (\n      SELECT\n        WK_GRP_ID \n      FROM \n        SA_WORK_GRP \n      WHERE \n        WK_GRP_CD like 'MR%'\n    )\n    and W.STATUS = 'OP'\n    --and W.PLAN_START_DATE >= GETDATE()\n  GROUP BY\n    W.EQUIP_ID\n)\nSELECT\n  C1.*, \n  C2.PLAN_START_DATE\nFROM\n  CTE1 C1 \n  left join CTE2 C2 on C2.EQUIP_ID = C1.EQUIP_ID\nWHERE\nC1.EQUIP_NO is not null\nORDER BY\n  C1.EQUIP_NO",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table [dbo].[Attunity_IMTE]"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_DESP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_DESP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_ID",
                                            "type": "Int64"
                                        },
                                        "sink": {
                                            "name": "EQUIP_ID",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PLAN_START_DATE",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "PLAN_START_DATE",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_DESP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_DESP",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_j47",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_j47",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "WITH CTE1 AS (\n  SELECT\n    V.EQUIP_NO,\n    V.EQUIP_CLASS_CD,\n    V.EQUIP_DESP, \n    V.EQUIP_CLASS_DESP, \n    E.EQUIP_ID\n  FROM\n    xls_v_Equipment_Registration V\n    inner join EI_EQUIPMENT E on E.EQUIP_NO = V.EQUIP_NO\n  WHERE\n    (\n      (\n        V.EQUIP_CLASS_CD LIKE 'MST%'\n        AND V.EQUIP_NO LIKE 'EI%'\n      )\n      OR (\n        V.EQUIP_CLASS_CD LIKE 'MSI%'\n        AND (\n          V.EQUIP_NO LIKE 'WIX%'\n          OR V.EQUIP_NO LIKE 'WIY%'\n        )\n      )\n    )\n), CTE2 AS (\n  SELECT \n    MIN(W.PLAN_START_DATE) AS PLAN_START_DATE, \n    W.EQUIP_ID\n  FROM\n    WM_WORK_ORDER W \n    left join SA_WORK_GRP S on S.WK_GRP_ID = W.WK_GRP_ID\n    inner join CTE1 C1 on C1.EQUIP_ID = W.EQUIP_ID\n  WHERE\n    W.CREATE_DATE >= DATEADD(MONTH, -12, GETDATE())\n    and S.WK_GRP_ID in (\n      SELECT\n        WK_GRP_ID \n      FROM \n        SA_WORK_GRP \n      WHERE \n        WK_GRP_CD like 'MR%'\n    )\n    and W.STATUS = 'OP'\n    --and W.PLAN_START_DATE >= GETDATE()\n  GROUP BY\n    W.EQUIP_ID\n)\nSELECT\n  C1.*, \n  C2.PLAN_START_DATE\nFROM\n  CTE1 C1 \n  left join CTE2 C2 on C2.EQUIP_ID = C1.EQUIP_ID\nWHERE\nC1.EQUIP_NO is not null\nORDER BY\n  C1.EQUIP_NO",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_j47",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-08-28T09:52:02Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_j47')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_j47')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_AttuntiyBogieNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_j1t",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_Bogie"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT(E3.EQUIP_NO) AS BogieNo FROM EI_EQUIP_STRT E1,EI_EQUIPMENT E2,EI_EQUIPMENT E3,EI_EQUIP_CLASS E4 WHERE E1.PARENT_EQUIP_ID = E2.EQUIP_ID AND E1.EQUIP_ID = E3.EQUIP_ID AND E4.EQUIP_CLASS_ID = E3.EQUIP_CLASS_ID AND E4.EQUIP_CLASS_CD LIKE 'EMUYS-%' AND E4.EQUIP_CLASS_CD LIKE '%BOGIE%'",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_Bogie"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "BogieNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BogieNo",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_j1t",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_j1t",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-11T04:33:59Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_j1t')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_j1t')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_CompleteWO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_a3e",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-workorderfile//"
                            },
                            {
                                "name": "Destination",
                                "value": "CompleteWO/New/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_a3e",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_a3e",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-13T10:06:12Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_a3e')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_a3e')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Phase2A_CopyPipeline_FitDefitMent')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_brc",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-fitdefitmentfile//"
                            },
                            {
                                "name": "Destination",
                                "value": "UpdateFitmentDefitment/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_brc",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_brc",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-01-14T02:55:15Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_brc')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_brc')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttnuityFailureCode')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_efy",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_FailueCode"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "Declare @temp Table(EQUIP_CLASS_CD nvarchar(50))\n\nINSERT INTO @temp\nSELECT\n  DISTINCT EQUIP_CLASS_CD \nFROM\n  xls_v_Equipment_Registration\nWHERE\n  OPTN_WK_GRP_CD like 'MR%'\n\nSELECT DISTINCT\n  S.[TYPE] AS FAILURE_CODE_TYPE,\n  S.CODE AS FAILURE_CODE,\n  S.DESP\nFROM\n  EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n  LEFT JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE, \n  EI_EQUIP_CLASS E2\nWHERE\n  E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n  AND S.[TYPE] = 'FAILURE_CODE'\n  AND E2.EQUIP_CLASS_CD IN (\n    SELECT\n      DISTINCT EQUIP_CLASS_CD\n    FROM\n      @temp\n  )\nUNION\n\n-- Failure Cause Code\nSELECT DISTINCT\n  S.[TYPE],\n  S.CODE,\n  S.DESP\nFROM\n  EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n  LEFT JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE, \n  EI_EQUIP_CLASS E2\nWHERE\n  E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n  AND S.[TYPE] = 'FAILURE_CAUSE_CODE'\n  AND E2.EQUIP_CLASS_CD IN (\n    SELECT\n      DISTINCT EQUIP_CLASS_CD\n    FROM\n      @temp\n  )\nUNION\n-- Failure Action Code\nSELECT DISTINCT\n  S.[TYPE],\n  S.CODE,\n  S.DESP\nFROM\n  EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n  LEFT JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE, \n  EI_EQUIP_CLASS E2\nWHERE\n  E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n  AND S.[TYPE] = 'FAILURE_ACTION_CODE'\n  AND E2.EQUIP_CLASS_CD IN (\n    SELECT\n      DISTINCT EQUIP_CLASS_CD\n    FROM\n      @temp\n  ) \n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_FailueCode",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "FAILURE_CODE"
                                        },
                                        "sink": {
                                            "name": "FAILURE_CODE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FAILURE_CODE_TYPE"
                                        },
                                        "sink": {
                                            "name": "FAILURE_CODE_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_efy",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_efy",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "Declare @temp Table(EQUIP_CLASS_CD nvarchar(50))\n\nINSERT INTO @temp\nSELECT\n  DISTINCT EQUIP_CLASS_CD \nFROM\n  xls_v_Equipment_Registration\nWHERE\n  OPTN_WK_GRP_CD like 'MR%'\n\nSELECT DISTINCT\n  S.[TYPE] AS FAILURE_CODE_TYPE,\n  S.CODE AS FAILURE_CODE,\n  S.DESP\nFROM\n  EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n  LEFT JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE, \n  EI_EQUIP_CLASS E2\nWHERE\n  E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n  AND S.[TYPE] = 'FAILURE_CODE'\n  AND E2.EQUIP_CLASS_CD IN (\n    SELECT\n      DISTINCT EQUIP_CLASS_CD\n    FROM\n      @temp\n  )\nUNION\n\n-- Failure Cause Code\nSELECT DISTINCT\n  S.[TYPE],\n  S.CODE,\n  S.DESP\nFROM\n  EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n  LEFT JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE, \n  EI_EQUIP_CLASS E2\nWHERE\n  E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n  AND S.[TYPE] = 'FAILURE_CAUSE_CODE'\n  AND E2.EQUIP_CLASS_CD IN (\n    SELECT\n      DISTINCT EQUIP_CLASS_CD\n    FROM\n      @temp\n  )\nUNION\n-- Failure Action Code\nSELECT DISTINCT\n  S.[TYPE],\n  S.CODE,\n  S.DESP\nFROM\n  EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n  LEFT JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE, \n  EI_EQUIP_CLASS E2\nWHERE\n  E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n  AND S.[TYPE] = 'FAILURE_ACTION_CODE'\n  AND E2.EQUIP_CLASS_CD IN (\n    SELECT\n      DISTINCT EQUIP_CLASS_CD\n    FROM\n      @temp\n  ) \n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_efy",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-08-31T06:12:05Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_efy')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_efy')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_SyncCmRequest')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_hji",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "CreateCMWO/To_ADF/"
                            },
                            {
                                "name": "Destination",
                                "value": "smd-cmsyncworkorderfile//"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "FileServerReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_syncCmrequest",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_syncCmrequest",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-04-08T07:06:35Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_syncCmrequest')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_syncCmrequest')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_CmTemplate_BlobToCommonServer')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_yhp",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-cmuploadworkorderfile//"
                            },
                            {
                                "name": "Destination",
                                "value": "CreateCMWO/New/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_cmTemplate_Blob",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_cmTemplate_CommonServer",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-04-09T08:21:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_cmTemplate_Blob')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_cmTemplate_CommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_smd_cqa_upload')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_9c5",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-interface-smd-cqa//"
                            },
                            {
                                "name": "Destination",
                                "value": "InterfaceServerBatchJob/CAQUpload/Upload/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_cqaupload",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_cqaupload",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-04-10T06:20:39Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_cqaupload')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_cqaupload')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunityFailCodeWithEquipNo')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_enp",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_FailueCodeWithEquipNo"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT CODE AS FAILURE_CODE, \n'WORK_NATURE_2' AS FAILURE_CODE_TYPE,\n'' AS EQUIP_NO,\nDESP\nFROM SA_SYS_GENERIC_Code\nWHERE TYPE = 'WORK_NATURE'\nAND PARENT_GC_ID in\n(\n    SELECT GC_ID  FROM SA_SYS_GENERIC_Code WHERE CODE = 'CM'\n)\nUnion \nSELECT DISTINCT CODE, \n'WORK_NATURE_1',\n'',\nDESP\nFROM SA_SYS_GENERIC_Code\nWHERE TYPE = 'WORK_NATURE'\nAND CODE = 'CM'\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_FailueCodeWithEquipNo",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "FAILURE_CODE",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FAILURE_CODE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FAILURE_CODE_TYPE",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FAILURE_CODE_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_AttunityFailCodeWithEquipNo",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_AttunityFailCodeWithEquipNo",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT DISTINCT CODE AS FAILURE_CODE, \n'WORK_NATURE_2' AS FAILURE_CODE_TYPE,\n'' AS EQUIP_NO,\nDESP\nFROM SA_SYS_GENERIC_Code\nWHERE TYPE = 'WORK_NATURE'\nAND PARENT_GC_ID in\n(\n    SELECT GC_ID  FROM SA_SYS_GENERIC_Code WHERE CODE = 'CM'\n)\nUnion \nSELECT DISTINCT CODE, \n'WORK_NATURE_1',\n'',\nDESP\nFROM SA_SYS_GENERIC_Code\nWHERE TYPE = 'WORK_NATURE'\nAND CODE = 'CM'\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_AttunityFailCodeWithEquipNo",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-08-31T06:17:34Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_AttunityFailCodeWithEquipNo')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_AttunityFailCodeWithEquipNo')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_async_workorder')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_ylh",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_WorkOrder_ForTest"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT W.WO_NO, W.WO_DESP, S.WK_GRP_ID, S.WK_GRP_CD, S.WK_GRP_NAME, W.PLAN_START_DATE, W.GC_WORK_NATURE_LV1_CD, W.GC_WORK_NATURE_LV2_CD, P.STD_JOB_CD, E1.EQUIP_NO, E2.EQUIP_CLASS_CD, Isnull(C.LOC_ID,'') as LOC_ID, Isnull(C.LOC_CD,'') as LOC_CD, W.CREATE_DATE\nFROM WM_WORK_ORDER W left join PM_STANDARD_JOB P on P.STD_JOB_ID = W.STD_JOB_ID left join EI_EQUIPMENT E1 on E1.EQUIP_ID = W.EQUIP_ID\nleft join EI_EQUIP_CLASS E2 on E2.EQUIP_CLASS_ID = W.EQUIP_CLASS_ID left join SA_WORK_GRP S on S.WK_GRP_ID = W.WK_GRP_ID\nleft join CO_LOCATION C on C.LOC_ID = W.PLAN_FROM_LOC_ID\nWHERE W.CREATE_DATE >= DATEADD(DAY, -60, GETDATE()) and W.STATUS = 'OP'\nand P.STD_JOB_CD is not null",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table Attunity_WorkOrder_ForTest"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "WO_NO",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WO_NO",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WO_DESP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WO_DESP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_ID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WK_GRP_ID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WK_GRP_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_NAME",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WK_GRP_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PLAN_START_DATE",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "PLAN_START_DATE",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GC_WORK_NATURE_LV1_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "GC_WORK_NATURE_LV1_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GC_WORK_NATURE_LV2_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "GC_WORK_NATURE_LV2_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STD_JOB_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "STD_JOB_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_NO",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LOC_ID",
                                            "type": "Int64"
                                        },
                                        "sink": {
                                            "name": "LOC_ID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LOC_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "LOC_CD",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CREATE_DATE"
                                        },
                                        "sink": {
                                            "name": "CREATE_DATE"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_async_workorder",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_async_workorder",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "annotations": [],
                "lastPublishTime": "2020-05-12T07:28:51Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_async_workorder')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_async_workorder')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_CmTemplate_BlobToCommonServer_test')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_xal",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-cmuploadworkorderfile//"
                            },
                            {
                                "name": "Destination",
                                "value": "CreateCMWO/New/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false,
                            "skipErrorFile": {
                                "fileMissing": true
                            },
                            "validateDataConsistency": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_xal",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_xal",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-06-22T02:45:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_xal')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_xal')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_CmTemplate_BlobToCommonServer_Test2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_8n8",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "smd-cmuploadworkorderfile//"
                            },
                            {
                                "name": "Destination",
                                "value": "CreateCMWO/New/"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "modifiedDatetimeStart": {
                                        "value": "@pipeline().parameters.windowStart",
                                        "type": "Expression"
                                    },
                                    "modifiedDatetimeEnd": {
                                        "value": "@pipeline().parameters.windowEnd",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*"
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false,
                            "skipErrorFile": {
                                "fileMissing": true
                            },
                            "validateDataConsistency": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_8n8",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_8n8",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2020-06-22T03:13:28Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_8n8')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_8n8')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_EquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_7ar",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_EquipmentClassAssocCode"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select  E2.EQUIP_CLASS_ID, E2.EQUIP_CLASS_CD,\nS.[TYPE] ,\n  S.CODE ,\n  S.DESP \n  from EI_EQUIP_CLASS_ITEMS_ASSOC E1 \n JOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE\n JOIN EI_EQUIP_CLASS E2 ON E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table Attunity_EquipmentClassAssocCode"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "nchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TYPE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TYPE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CODE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "CODE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_7ar",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_7ar",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-01-28T09:24:02Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_7ar')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_7ar')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunityEquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_jgu",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_EquipmentClassAssocCode"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "Select  E2.EQUIP_CLASS_ID, E2.EQUIP_CLASS_CD,\nS.[TYPE] ,\nS.CODE ,\nS.DESP \nfrom EI_EQUIP_CLASS_ITEMS_ASSOC E1 \nJOIN SA_SYS_GENERIC_CODE S ON E1.GC_ITEM_CD = S.CODE\nJOIN EI_EQUIP_CLASS E2 ON E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_EquipmentClassAssocCode"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "nchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TYPE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TYPE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CODE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "CODE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_jgu",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_jgu",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-01-29T09:15:12Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_jgu')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_jgu')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_EquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_czo",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_EquipmentClassAssocCode"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT\nE1.EQUIP_CLASS_ID,\nE2.EQUIP_CLASS_CD,\nE1.ITEM_TYPE [TYPE],\nS.CODE ,\nS.DESP,\nNULL as ParentCode\nFROM dbo.EI_EQUIP_CLASS_ITEMS_ASSOC E1\nLEFT OUTER JOIN  dbo.EI_EQUIP_CLASS E2 ON E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\nLEFT OUTER JOIN  dbo.SA_SYS_GENERIC_CODE S ON  E1.GC_ITEM_CD = S.CODE AND E1.ITEM_TYPE  = S.TYPE\nWHERE ITEM_TYPE in ( 'IMPACT_CODE','FAILURE_SYMPTOM_CODE','FAILURE_CONSEQUENCE_CODE','FAILURE_CODE','FAILURE_CAUSE_CODE','FAILURE_ACTION_CODE','COMPONENT_CODE') and S.STATUS = 1\nand E1.EQUIP_CLASS_ID is not null",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_EquipmentClassAssocCode"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "nchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TYPE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TYPE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CODE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "CODE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_EquipmentClassAssocCode",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_EquipmentClassAssocCode",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT\nE1.EQUIP_CLASS_ID,\nE2.EQUIP_CLASS_CD,\nE1.ITEM_TYPE [TYPE],\nS.CODE ,\nS.DESP,\nNULL as ParentCode\nFROM dbo.EI_EQUIP_CLASS_ITEMS_ASSOC E1\nLEFT OUTER JOIN  dbo.EI_EQUIP_CLASS E2 ON E1.EQUIP_CLASS_ID = E2.EQUIP_CLASS_ID\nLEFT OUTER JOIN  dbo.SA_SYS_GENERIC_CODE S ON  E1.GC_ITEM_CD = S.CODE AND E1.ITEM_TYPE  = S.TYPE\nWHERE ITEM_TYPE in ( 'IMPACT_CODE','FAILURE_SYMPTOM_CODE','FAILURE_CONSEQUENCE_CODE','FAILURE_CODE','FAILURE_CAUSE_CODE','FAILURE_ACTION_CODE','COMPONENT_CODE') and S.STATUS = 1\nand E1.EQUIP_CLASS_ID is not null",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_EquipmentClassAssocCode",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-06-22T05:20:03Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_EquipmentClassAssocCode')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_EquipmentClassAssocCode')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_AttunitySYSGENERICCODE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_tv9",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_SYS_GENERIC_CODE"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "  SELECT \n  LINE_CD AS [Code], \n  LINE_NAME AS [Name],  \n  'LINE' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM CO_LINE\n  UNION\nSELECT LOC_CD AS [Code], \n  LOC_NAME AS [Name],  \n  'Location_DEPOT' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM\n  CO_LOCATION\n  where GC_LOC_TYPE_CD='DEPOT'\n  UNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level1' AS [Type], ''  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE WHERE CODE in ('PM', 'CM') AND TYPE = 'WORK_NATURE'\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_PM' AS [Type], 'PM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'PM' AND TYPE = 'WORK_NATURE')\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_CM' AS [Type], 'CM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'CM' AND TYPE = 'WORK_NATURE')",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.Attunity_SYS_GENERIC_CODE"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Type",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Type",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCode",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "ParentCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_tv9",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_tv9",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-03-10T08:46:26Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_tv9')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_tv9')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_SYS_GENERIC_CODE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_ekj",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_SYS_GENERIC_CODE"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT \n  LINE_CD AS [Code], \n  LINE_NAME AS [Name],  \n  'LINE' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM CO_LINE\n  UNION\nSELECT LOC_CD AS [Code], \n  LOC_NAME AS [Name],  \n  'Location_DEPOT' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM\n  CO_LOCATION\n  where GC_LOC_TYPE_CD='DEPOT'\n  UNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level1' AS [Type], ''  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE WHERE CODE in ('PM', 'CM') AND TYPE = 'WORK_NATURE'\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_PM' AS [Type], 'PM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'PM' AND TYPE = 'WORK_NATURE')\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_CM' AS [Type], 'CM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'CM' AND TYPE = 'WORK_NATURE')",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE Attunity_SYS_GENERIC_CODE"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Type",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Type",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCode",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "ParentCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_SYS_GENERIC_CODE",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_SYS_GENERIC_CODE",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT \n  LINE_CD AS [Code], \n  LINE_NAME AS [Name],  \n  'LINE' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM CO_LINE\n  UNION\nSELECT LOC_CD AS [Code], \n  LOC_NAME AS [Name],  \n  'Location_DEPOT' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM\n  CO_LOCATION\n  where GC_LOC_TYPE_CD='DEPOT'\n  UNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level1' AS [Type], ''  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE WHERE CODE in ('PM', 'CM') AND TYPE = 'WORK_NATURE'\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_PM' AS [Type], 'PM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'PM' AND TYPE = 'WORK_NATURE')\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_CM' AS [Type], 'CM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'CM' AND TYPE = 'WORK_NATURE')\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_SYS_GENERIC_CODE",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-03-15T06:09:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_SYS_GENERIC_CODE')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_SYS_GENERIC_CODE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_StandardJob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_kzo",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_StandardJob"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT Distinct  STD_JOB_CD, STD_JOB_DESP, WK_GRP_CD,GC_WORK_NATURE_LVL1_CD,GC_WORK_NATURE_LVL2_CD,ESTIMATE_JOB_DUR\nFROM xls_v_Standard_Job\nWHERE GC_WORK_NATURE_LVL1_CD in ('CM')\nand WK_GRP_CD like 'MR%' ",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.Attunity_StandardJob"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "STD_JOB_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "StandardJobCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WorkGroupCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GC_WORK_NATURE_LVL1_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WorkNatureLevel1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GC_WORK_NATURE_LVL2_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WorkNatureLevel2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ESTIMATE_JOB_DUR",
                                            "type": "Int16",
                                            "physicalType": "smallint"
                                        },
                                        "sink": {
                                            "name": "EstimateJobDuration",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STD_JOB_DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "StandardJobDesp",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_StandardJob",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_StandardJob",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT Top 1  STD_JOB_CD, STD_JOB_DESP, WK_GRP_CD,GC_WORK_NATURE_LVL1_CD,GC_WORK_NATURE_LVL2_CD,ESTIMATE_JOB_DUR\nFROM xls_v_Standard_Job\nWHERE GC_WORK_NATURE_LVL1_CD in ('CM')\nand WK_GRP_CD like 'MR%' ",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_StandardJob",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-04-19T07:43:03Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_StandardJob')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_StandardJob')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_nml')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_nml",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_PM_STD_JOB_PARAM_SET_forTest"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select * from PM_STD_JOB_PARAM_SET",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "BU_ID",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "BU_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STD_JOB_PARAM_SET_ID",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "STD_JOB_PARAM_SET_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STD_JOB_PARAM_SET_NAME",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "STD_JOB_PARAM_SET_NAME",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STD_JOB_ID",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "STD_JOB_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LAST_UPD_DATETIME",
                                            "type": "DateTime",
                                            "physicalType": "datetime2"
                                        },
                                        "sink": {
                                            "name": "LAST_UPD_DATETIME",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LAST_UPD_USER_ID",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "LAST_UPD_USER_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TEMP_EQUIP_CLASS_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TEMP_EQUIP_CLASS_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_nml",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_nml",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "annotations": [],
                "lastPublishTime": "2021-03-22T02:13:24Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_nml')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_nml')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_CM_InitialDelaySetting')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_puk",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_CM_InitialDelaySetting"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT d.[EQUIP_CLASS_CD]\n, c.[CTX_ID1]\n, c.[CTX_ID2]\n, c.[CTX_ID3]\n, c.[CTX_ID4]\nFROM [mmsdb].[dbo].[CO_UDF_SET_ASSOC] a\nLEFT OUTER JOIN [mmsdb].[dbo].[CO_UDF_SET] b ON b.UDF_SET_ID = a.UDF_SET_ID\nLEFT OUTER JOIN [mmsdb].[dbo].[CO_UDF_ASSOC] c ON c.UDF_ASSOC_ID = b.[UDF_ASSOC_ID]\nLEFT OUTER JOIN [mmsdb].[dbo].[EI_EQUIP_CLASS] d ON c.[CTX_ID1] = CAST(d.EQUIP_CLASS_ID AS CHAR)\nWHERE c.GC_CTX_TYPE_CD = 'WO' AND c.CTX_ID2 <> 'C&R PROJECT WORKS' \nAND a.UDF_ID = (SELECT UDF_ID FROM [mmsdb].[dbo].[CO_UDF_DEF] WHERE UDF_NAME = 'Ref. Initial Delay (min)')\nORDER BY d.EQUIP_CLASS_CD\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.Attunity_CM_InitialDelaySetting"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "CTX_ID1",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CTX_ID2",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "WorkNatureLevel1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CTX_ID3",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "WorkNatureLevel2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CTX_ID4",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "StandardJobCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_CM_InitialDelaySetting",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_CM_InitialDelaySetting",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT d.[EQUIP_CLASS_CD]\n, c.[CTX_ID1]\n, c.[CTX_ID2]\n, c.[CTX_ID3]\n, c.[CTX_ID4]\nFROM [mmsdb].[dbo].[CO_UDF_SET_ASSOC] a\nLEFT OUTER JOIN [mmsdb].[dbo].[CO_UDF_SET] b ON b.UDF_SET_ID = a.UDF_SET_ID\nLEFT OUTER JOIN [mmsdb].[dbo].[CO_UDF_ASSOC] c ON c.UDF_ASSOC_ID = b.[UDF_ASSOC_ID]\nLEFT OUTER JOIN [mmsdb].[dbo].[EI_EQUIP_CLASS] d ON c.[CTX_ID1] = CAST(d.EQUIP_CLASS_ID AS CHAR)\nWHERE c.GC_CTX_TYPE_CD = 'WO' AND c.CTX_ID2 <> 'C&R PROJECT WORKS' \nAND a.UDF_ID = (SELECT UDF_ID FROM [mmsdb].[dbo].[CO_UDF_DEF] WHERE UDF_NAME = 'Ref. Initial Delay (min)')\nORDER BY d.EQUIP_CLASS_CD\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_CM_InitialDelaySetting",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-04-28T08:36:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_CM_InitialDelaySetting')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_CM_InitialDelaySetting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_StandardJob_New')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_kzo",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_StandardJob"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT Distinct  STD_JOB_CD, STD_JOB_DESP, WK_GRP_CD,GC_WORK_NATURE_LVL1_CD,GC_WORK_NATURE_LVL2_CD,ESTIMATE_JOB_DUR\nFROM xls_v_Standard_Job\nWHERE GC_WORK_NATURE_LVL1_CD in ('CM')",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.Attunity_StandardJob"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "STD_JOB_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "StandardJobCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WK_GRP_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WorkGroupCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GC_WORK_NATURE_LVL1_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WorkNatureLevel1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GC_WORK_NATURE_LVL2_CD",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WorkNatureLevel2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ESTIMATE_JOB_DUR",
                                            "type": "Int16",
                                            "physicalType": "smallint"
                                        },
                                        "sink": {
                                            "name": "EstimateJobDuration",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STD_JOB_DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "StandardJobDesp",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_StandardJob_New",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_StandardJob_New",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT Top 1  STD_JOB_CD, STD_JOB_DESP, WK_GRP_CD,GC_WORK_NATURE_LVL1_CD,GC_WORK_NATURE_LVL2_CD,ESTIMATE_JOB_DUR\nFROM xls_v_Standard_Job\nWHERE GC_WORK_NATURE_LVL1_CD in ('CM')",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_StandardJob_New",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-07-12T07:02:50Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_StandardJob_New')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_StandardJob_New')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_SYS_GENERIC_CODE_New')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_ekj",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_SYS_GENERIC_CODE"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT \n  LINE_CD AS [Code], \n  LINE_NAME AS [Name],  \n  'LINE' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM CO_LINE\n  UNION\nSELECT LOC_CD AS [Code], \n  LOC_NAME AS [Name],  \n  'Location_DEPOT' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM\n  CO_LOCATION\n  where GC_LOC_TYPE_CD='DEPOT'\n  UNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level1' AS [Type], ''  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE WHERE CODE in ('PM', 'CM') AND TYPE = 'WORK_NATURE'\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_PM' AS [Type], 'PM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'PM' AND TYPE = 'WORK_NATURE')\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_CM' AS [Type], 'CM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'CM' AND TYPE = 'WORK_NATURE')",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE Attunity_SYS_GENERIC_CODE"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Type",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Type",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCode",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "ParentCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DESP",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_SYS_GENERIC_CODE_New",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_SYS_GENERIC_CODE_New",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT \n  LINE_CD AS [Code], \n  LINE_NAME AS [Name],  \n  'LINE' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM CO_LINE\n  UNION\nSELECT LOC_CD AS [Code], \n  LOC_NAME AS [Name],  \n  'Location_DEPOT' As [Type],\n  '' ParentCode,\n  '' DESP\nFROM\n  CO_LOCATION\n  where GC_LOC_TYPE_CD='DEPOT'\n  UNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level1' AS [Type], ''  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE WHERE CODE in ('PM', 'CM') AND TYPE = 'WORK_NATURE'\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_PM' AS [Type], 'PM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'PM' AND TYPE = 'WORK_NATURE')\nUNION\nSELECT CODE, '' as [Name], 'WORK_NATURE_Level2_CM' AS [Type], 'CM'  ParentCode, DESP\nFROM SA_SYS_GENERIC_CODE \nWHERE PARENT_GC_ID in \n(SELECT GC_ID FROM SA_SYS_GENERIC_CODE CODE WHERE  CODE = 'CM' AND TYPE = 'WORK_NATURE')\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_SYS_GENERIC_CODE_New",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-07-12T07:50:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_SYS_GENERIC_CODE_New')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_SYS_GENERIC_CODE_New')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPipeline_Attunity_EquipmentClass')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_EquipCLass",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.Attunity_EquipmentClass"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select EQUIP_CLASS_ID, EQUIP_CLASS_CD from EI_EQUIP_CLASS",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.Attunity_EquipmentClass",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "Int64"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_ID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EQUIP_CLASS_CD",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_Attunity_EquipmentClass",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_Attunity_EquipmentClass",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select EQUIP_CLASS_ID, EQUIP_CLASS_CD from EI_EQUIP_CLASS",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SourceDataset_Attunity_EquipmentClass",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "String"
                    },
                    "windowEnd": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-10-21T06:51:59Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_Attunity_EquipmentClass')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_Attunity_EquipmentClass')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_8n8')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2A_AzureBlobStorage_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "smd-cmuploadworkorderfile"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2A_AzureBlobStorage_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_8n8')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CommonServer",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": "CreateCMWO/New"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CommonServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_7ar')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CODE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_7ar')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "nchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "CODE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_EquipmentClassAssocCode"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_jgu')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "nchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "CODE",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_EquipmentClassAssocCode"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_jgu')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CODE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_EquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "nchar"
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CODE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_EquipmentClassAssocCode"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_EquipmentClassAssocCode')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CODE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_tv9')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Code",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Name",
                        "type": "varchar"
                    },
                    {
                        "name": "Type",
                        "type": "varchar"
                    },
                    {
                        "name": "ParentCode",
                        "type": "varchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_tv9')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Code",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "Type",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "ParentCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_SYS_GENERIC_CODE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_SYS_GENERIC_CODE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Code",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Name",
                        "type": "varchar"
                    },
                    {
                        "name": "Type",
                        "type": "varchar"
                    },
                    {
                        "name": "ParentCode",
                        "type": "varchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_SYS_GENERIC_CODE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Code",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "Type",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "ParentCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_SYS_GENERIC_CODE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_StandardJob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "STD_JOB_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "STD_JOB_DESP",
                        "type": "nvarchar"
                    },
                    {
                        "name": "WK_GRP_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GC_WORK_NATURE_LVL1_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GC_WORK_NATURE_LVL2_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ESTIMATE_JOB_DUR",
                        "type": "smallint",
                        "precision": 5
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_StandardJob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "StandardJobCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "StandardJobDesp",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkGroupCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkNatureLevel1",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkNatureLevel2",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EstimateJobDuration",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_StandardJob"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_nml')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "BU_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "STD_JOB_PARAM_SET_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "STD_JOB_PARAM_SET_NAME",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "STD_JOB_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "LAST_UPD_DATETIME",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "LAST_UPD_USER_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "TEMP_EQUIP_CLASS_ID",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_PM_STD_JOB_PARAM_SET_forTest"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_nml')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "BU_ID",
                        "type": "decimal",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "STD_JOB_PARAM_SET_ID",
                        "type": "decimal",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "STD_JOB_PARAM_SET_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "STD_JOB_ID",
                        "type": "decimal",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "LAST_UPD_DATETIME",
                        "type": "datetime2",
                        "scale": 7
                    },
                    {
                        "name": "LAST_UPD_USER_ID",
                        "type": "decimal",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "TEMP_EQUIP_CLASS_ID",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_CM_InitialDelaySetting')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "varchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkNatureLevel1",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkNatureLevel2",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "StandardJobCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_CM_InitialDelaySetting"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_CM_InitialDelaySetting')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "CTX_ID1",
                        "type": "varchar"
                    },
                    {
                        "name": "CTX_ID2",
                        "type": "varchar"
                    },
                    {
                        "name": "CTX_ID3",
                        "type": "varchar"
                    },
                    {
                        "name": "CTX_ID4",
                        "type": "varchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_StandardJob_New')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "STD_JOB_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "STD_JOB_DESP",
                        "type": "nvarchar"
                    },
                    {
                        "name": "WK_GRP_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GC_WORK_NATURE_LVL1_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GC_WORK_NATURE_LVL2_CD",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ESTIMATE_JOB_DUR",
                        "type": "smallint",
                        "precision": 5
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_StandardJob_New')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "StandardJobCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "StandardJobDesp",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkGroupCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkNatureLevel1",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "WorkNatureLevel2",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "EstimateJobDuration",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_StandardJob"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_SYS_GENERIC_CODE_New')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Code",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "Type",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "ParentCode",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar",
                        "precision": 0,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_SYS_GENERIC_CODE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_SYS_GENERIC_CODE_New')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Code",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Name",
                        "type": "varchar"
                    },
                    {
                        "name": "Type",
                        "type": "varchar"
                    },
                    {
                        "name": "ParentCode",
                        "type": "varchar"
                    },
                    {
                        "name": "DESP",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_Attunity_EquipmentClass')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Phase2B_SQL_Server_SIT",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Attunity_EquipmentClass"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Phase2B_SQL_Server_SIT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_Attunity_EquipmentClass')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "BU_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "EQUIP_CLASS_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "EQUIP_CLASS_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "ALIAS_MANDATORY_IND",
                        "type": "varchar"
                    },
                    {
                        "name": "GC_EQUIP_CLASS_TYPE_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "EQUIP_CLASS_DESP",
                        "type": "varchar"
                    },
                    {
                        "name": "FUNCTIONAL_UNIT_IND",
                        "type": "varchar"
                    },
                    {
                        "name": "GC_SAFETY_CRITICAL_LEVEL_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "GC_SERVICE_CRITICAL_LEVEL_CD",
                        "type": "varchar"
                    },
                    {
                        "name": "ASSET_OWNER",
                        "type": "varchar"
                    },
                    {
                        "name": "CUSTODIAN",
                        "type": "varchar"
                    },
                    {
                        "name": "OPERATOR",
                        "type": "varchar"
                    },
                    {
                        "name": "MAINTAIN_WK_GRP_ID",
                        "type": "varchar"
                    },
                    {
                        "name": "VENDOR",
                        "type": "varchar"
                    },
                    {
                        "name": "OEM",
                        "type": "varchar"
                    },
                    {
                        "name": "LOC_RANGE_IND",
                        "type": "varchar"
                    },
                    {
                        "name": "ANTICIPATED_LIFE_SPAN",
                        "type": "decimal",
                        "precision": 6,
                        "scale": 2
                    },
                    {
                        "name": "DEFAULT_PARENT_CLASS_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "GC_CLASS_GRP_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "NORMAL_OPER_START_MINUTES",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 2
                    },
                    {
                        "name": "NORMAL_OPER_END_MINUTES",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 2
                    },
                    {
                        "name": "RESERVED_FIELD1",
                        "type": "varchar"
                    },
                    {
                        "name": "RESERVED_FIELD2",
                        "type": "varchar"
                    },
                    {
                        "name": "RESERVED_FIELD3",
                        "type": "varchar"
                    },
                    {
                        "name": "STATUS",
                        "type": "varchar"
                    },
                    {
                        "name": "LAST_UPD_USER_ID",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "LAST_UPD_DATETIME",
                        "type": "datetime2",
                        "scale": 6
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "EI_EQUIP_CLASS"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        }
    ]
}